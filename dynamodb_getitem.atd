type attribute_name <ocaml from="Dynamodb_base"> = abstract

type key_value = {
  ?b <json name="B">: string option;
  ?bs <json name="BS">: string list option;
  ?s <json name="S">: string option;
  ?ss  <json name="SS">: string list option;
  ?n <json name="N">: string option;
  ?ns <json name="NS">: string list option
}

type key = (string * key_value) list <json repr="object">

type return_consumed_capacity = [
  INDEXES
  | TOTAL
  | NONE
]

type get_item = {
  ?attributes <json name="AttributesToGet">: attribute_name list option;
  ?consistent_read <json name="ConsistentRead">: bool option;
  key <json name="Key">: key;
  ?return_consumed_capacity <json name="ReturnConsumedCapacity">:
    return_consumed_capacity option;
  table_name <json name="TableName">: string
}

type index_capacity_unit = { capacity_units <json name="CapacityUnits">: float }
type index_capacity_units = (string * index_capacity_unit) list <json rep

r="object">

type consumed_capacity = {
  capacity_units <json name="CapacityUnits">: float;
  global_secondary_indexes <json name="GlobalSecondaryIndexes">: index_capacity_units;
  local_secondary_indexes <json name="LocalSecondaryIndexes">: index_capacity_units;
  table_capacity <json name="Table">: index_capacity_units;
  table_name <json name="TableName">: string;
}

type result = {
  ?consumed_capacity <json name="ConsumedCapacity">: consumed_capacity option;
  item <json name="Item">: (string * key_value) list <json repr="object">;
}
