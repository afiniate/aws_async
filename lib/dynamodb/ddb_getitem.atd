type attribute_name = string

type attribute <ocaml module="Ddb_base_j"> = abstract

type return_consumed_capacity = [
  INDEXES
  | TOTAL
  | NONE
]

type index_capacity_unit = { capacity_units <json name="CapacityUnits">: float }
type index_capacity_units = (string * index_capacity_unit) list <json repr="object">

type consumed_capacity = {
  capacity_units <json name="CapacityUnits">: float;
  ?global_secondary_indexes <json name="GlobalSecondaryIndexes">:
    index_capacity_units option;
  ?local_secondary_indexes <json name="LocalSecondaryIndexes">:
    index_capacity_units option;
  table_capacity <json name="Table">: index_capacity_unit;
  table_name <json name="TableName">: string;
}

type key = (string * attribute) list <json repr="object">

type get_item = {
  ?attributes <json name="AttributesToGet">: attribute_name list option;
  ?consistent_read <json name="ConsistentRead">: bool option;
  key <json name="Key">: key;
  ?return_consumed_capacity <json name="ReturnConsumedCapacity">:
    return_consumed_capacity option;
  table_name <json name="TableName">: string
}


type result = {
  ?consumed_capacity <json name="ConsumedCapacity">: consumed_capacity option;
  ?item <json name="Item">: key option;
}
